#!/bin/expect

# netconf_basic.exp
# Untitled
#
# Created by xxx on 17/05/13.
# Copyright 2013 Alesanco Ltd. All rights reserved.

# La utilizaci√≥n de las comillas dentro de otras comillas ha de ser escapada
# <xmlns="urn:ietf:params:xml:ns:netconf:base:1.0"> se ha de utilizar dentro de un set como
#set xxx "<xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">"

set timeout 7
#set username [lindex $argv 0]
#set password [lindex $argv 1]
#set hostname [lindex $argv 2]

set username "root"
set password "ZX..\$56as..2"
set hostname "localhost"

# colors
set normal "\033\[0;30m"
set red "\033\[1;31m"
set red_n "\033\[0;31m"
set green "\033\[1;32m"
set yelow "\033\[1;33m"
set blue "\033\[1;34m"
set magenta "\033\[1;35m"
set cyan "\033\[1;36m"
set white "\033\[1;37m"


set hello "<hello xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\"
xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">
<capabilities>
<capability>urn:ietf:params:netconf:base:1.1</capability>
</capabilities>
</hello>]]>]]>"
		
set close_session "<rpc message-id=\"002\" 
xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">
<close-session/>
</rpc>"


set get_interfaces "<rpc message-id=\"001\"
xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">
<get>
<filter type=\"subtree\">
<interfaces xmlns=\"http://netconfcentral.org/ns/yuma-interfaces\">
</interfaces>
</filter>
</get>
</rpc>"

set close_session_final "\n#[string length $close_session]\n$close_session\n##\n"

set get_interfaces_final "\n#[string length $get_interfaces]\n$get_interfaces\n##\n"

log_user 0

#if {[llength $argv] == 0} {
#  send_user "Usage: scriptname username \'password\' hostname\n"
#  exit 1
#}

send_user "${red}\n#####\n# NETCONF Server: $hostname\n#####\n${normal}"

#################################################################################################
# MODULO HELLO (ABRIR SESION)
#################################################################################################
#spawn ssh -q -o StrictHostKeyChecking=no $username@$hostname
spawn ssh -s -p830 $username@$hostname netconf
match_max 10000

expect {
  timeout { send_user "\nFailed to get password prompt\n"; exit 1 }
  eof { send_user "\nSSH failure for $hostname\n"; exit 1 }
	send_user "Dentro de expect"
   
   -re ".*Are.*.*yes.*no.*" {
	send_user "REGEX match"
	send "yes\r"
	
	exp_continue
	}
	-re ".assword:" {
		# Sending the password
		send "$password\n"
		send_user "\nSending password\n" 
	}
	
}
expect {
  timeout { send_user "\nLogin failed. Password incorrect.\n"; exit 1}
  "/hello>]]>]]>"
}
send_user "\nPassword is correct and connected to NETCONF server\n" 
send_user "\nNETCONF server says hello\n" 
send_user "\n###########################################\n"
send_user "$expect_out(buffer)\n"
send_user "\n###########################################\n"


# Sending hello message
send_user "\n${red}SENDING HELLO MESSAGE TO THE SERVER${normal}\n" 
send "$hello\n"
sleep 0.2

expect "</hello>]]>]]>"
send_user "$expect_out(buffer)\n" 
send_user "\n###########################################\n"


#################################################################################################
# MODULO ARP
#################################################################################################

if {1==1} {
# Mando el get para los interfaces
send_user "\n${red}SENDING GET (INTERFACES) MESSAGE TO THE SERVER${normal}\n" 

send "$get_interfaces_final\n"

expect {
  timeout { send_user "\nTimeout.\n"; exit 1}
  "</rpc-reply>"
}

send_user "$expect_out(buffer)\n" 
send_user "\n###########################################\n" 
}

#################################################################################################
# CIERRE SESION
#################################################################################################

send_user "\n${red}CERRAMOS SESION NETCONF${normal}\n"
send "$close_session_final"

expect {
  timeout { send_user "\nTimeout.\n"; exit 1}
  "</rpc-reply>"
}

send_user "$expect_out(buffer)\n"

send_user "\n###############################################\n"

